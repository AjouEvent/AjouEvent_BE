name: deploy
run-name: Running
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [ "closed" ]

env:
  PROJECT_NAME: ajouevent-be
  BUCKET_NAME: ajouevent-cicd
  CODE_DEPLOY_APP_NAME: ajouevent-be
  DEPLOYMENT_GROUP_NAME: ajouevent-be

jobs:
  build-with-gradle:
    runs-on: self-hosted
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

    - name: mkdir
      run: mkdir ./src/main/resources/firebase

    - name: secret properties add
      run: |
        echo "${{secrets.APPLICATION_YML}}" > ./src/main/resources/application.yml
        echo "${{secrets.APPLICATION_DEV_YML}}" > ./src/main/resources/application-dev.yml
        echo "${{secrets.CREDENTIAL_JSON}}" > ./src/main/resources/credentials.json
        echo "${{secrets.DOCKER_COMPOSE}}" > ./src/main/resources/docker-compose.yml
        echo "${{secrets.PRO_YML}}" > ./src/main/resources/prometheus.yml
        echo "${{secrets.FIREBASE_JSON}}" > ./src/main/resources/firebase/ajou-event-firebase-adminsdk-aeken-655a7eca6d.json
    

    - name: Permission for gradlew
      run: chmod +x ./gradlew
      shell: bash

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

    - name: Code Deploy To EC2 instance
      run: aws deploy create-deployment
        --application-name $CODE_DEPLOY_APP_NAME
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name $DEPLOYMENT_GROUP_NAME
        --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
